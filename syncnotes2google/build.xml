<?xml version="1.0" encoding="iso-8859-1"?>
<project name="syncnotes2google" default="all" basedir="">


	<target name="init" description="Initialize environment">
		<property name="component.name" value="syncnotes2google" />
		<property name="component.version" value="0.0.5" />
		<property name="path.bin" value="bin" />
		<property name="path.build" value="build" />
		<property name="path.build.classes" value="build/classes" />
		<property name="path.build.lib" value="build/lib" />
		<property name="path.dist" value="dist" />
		<property name="path.lib" value="lib" />
		<property name="path.src" value="src" />
		<property name="path.src.java" value="src" />
		<property name="compile.debug" value="true" />
		<property name="compile.deprecation" value="true" />
		<property name="compile.jdk-version.source" value="1.5" />
		<property name="compile.jdk-version.target" value="1.5" />
		<property name="compile.optimize" value="true" />
		<property name="notes.path.lib" value="C:/Program Files (x86)/IBM/Lotus/Notes/jvm/lib/ext" />
		<property file="${basedir}/build.properties" />

		<path id="compile.classpath">
			<fileset dir="${path.lib}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${notes.path.lib}">
				<include name="Notes.jar" />
			</fileset>

		</path>

	</target>

	<target name="make_directories" description="Creates all project directories" depends="init">
		<mkdir dir="${path.build}" />
		<mkdir dir="${path.build.classes}" />
		<mkdir dir="${path.build.lib}" />
		<mkdir dir="${path.dist}" />
	</target>

	<target name="prepare" depends="init, make_directories" description="Prepare build directory">

	</target>

	<target name="compile" depends="prepare" description="Compile source">
		<javac debug="${compile.debug}" deprecation="${compile.deprecation}" destdir="${path.build.classes}" target="${compile.jdk-version.target}" source="${compile.jdk-version.source}" optimize="${compile.optimize}" srcdir="${path.src}">
			<classpath refid="compile.classpath" />
		</javac>
	</target>


	<target name="clean" depends="init" description="Wipeout all generated files">
		<delete dir="${path.build.classes}" />
		<delete dir="${path.build.lib}" />
	</target>

	<target name="all" depends="clean,compile" description="Clean and compile all components" />

	<target name="jar" depends="compile" description="Create binary distribution">
		<copy file="LICENSE" todir="${path.build.classes}" />
		<delete>
			<fileset dir="${path.build}" includes="*.jar" />
		</delete>
		<jar basedir="${path.build.classes}" jarfile="${path.build}/${component.name}.jar">
			<include name="**/*.class" />
			<manifest>
				<section name="${component.name}">
					<attribute name="Version" value="${component.version}" />
				</section>
			</manifest>
		</jar>

		<delete>
			<fileset dir="${path.build.classes}">
				<include name="LICENSE" />
			</fileset>
		</delete>
	</target>

	<target name="zip" depends="compile" description="Creates distribution">
		<copy file="LICENSE" todir="${path.build}" />
		<copy file="CHANGE" todir="${path.build}" />
		<copy file="UPDATE" todir="${path.build}" />
		<copy file="sync.properties" todir="${path.build}" />
		<copy file="syncnotes2google.bat" todir="${path.build}" />
		<copy file="syncnotes2google.sh" todir="${path.build}" />
		<copy todir="${path.build.lib}">
			<fileset dir="${path.lib}">
				<include name="*.jar" />
			</fileset>
		</copy>
		<touch file="${path.build}/${component.name}-${component.version}"/>
		<delete>
			<fileset dir="${path.dist}" includes="*.zip" />
		</delete>
		<zip basedir="${path.build}" destfile="${path.dist}/${component.name}-${component.version}.zip" whenempty="fail">
			<include name="LICENSE" />
			<include name="CHANGE" />
			<include name="UPDATE" />
			<include name="**/*.*" />
			<exclude name="classes/**/*.*" />
		</zip>
	</target>

	<target name="dist" depends="clean,jar,zip" />

</project>